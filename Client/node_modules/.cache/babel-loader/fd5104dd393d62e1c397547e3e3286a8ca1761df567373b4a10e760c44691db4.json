{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kavya\\\\task-tracker\\\\Client\\\\src\\\\App.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport TaskList from \"./components/TaskList\";\nimport TaskForm from \"./components/TaskForm\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n  const [tasks, setTasks] = useState([]);\n\n  // ‚úÖ Use environment-based API URL (helps both local + Docker)\n  const API_BASE = process.env.NODE_ENV === \"production\" ? \"\" // Docker/production uses same origin\n  : \"http://localhost:5000\"; // Local dev backend\n\n  // ‚úÖ Load tasks on mount\n  useEffect(() => {\n    fetch(`${API_BASE}/api/tasks`).then(res => {\n      if (!res.ok) throw new Error(\"Failed to fetch tasks\");\n      return res.json();\n    }).then(data => setTasks(data)).catch(err => console.error(\"Error fetching tasks:\", err));\n  }, []);\n\n  // ‚úÖ Add new task\n  const addTask = async text => {\n    if (!text.trim()) return;\n    try {\n      const res = await fetch(`${API_BASE}/api/tasks`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          text\n        })\n      });\n      if (!res.ok) throw new Error(\"Failed to add task\");\n      const newTask = await res.json();\n      setTasks(prev => [...prev, newTask]);\n    } catch (err) {\n      console.error(\"Error adding task:\", err);\n    }\n  };\n\n  // ‚úÖ Toggle task completion\n  const toggleTask = async id => {\n    try {\n      const res = await fetch(`${API_BASE}/api/tasks/${id}`, {\n        method: \"PATCH\"\n      });\n      if (!res.ok) throw new Error(\"Failed to toggle task\");\n      setTasks(prev => prev.map(t => t.id === id ? {\n        ...t,\n        done: !t.done\n      } : t));\n    } catch (err) {\n      console.error(\"Error toggling task:\", err);\n    }\n  };\n\n  // ‚úÖ Delete task\n  const deleteTask = async id => {\n    try {\n      const res = await fetch(`${API_BASE}/api/tasks/${id}`, {\n        method: \"DELETE\"\n      });\n      if (!res.ok) throw new Error(\"Failed to delete task\");\n      setTasks(prev => prev.filter(t => t.id !== id));\n    } catch (err) {\n      console.error(\"Error deleting task:\", err);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\uD83D\\uDCDDTask Tracker\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TaskForm, {\n      addTask: addTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TaskList, {\n      tasks: tasks,\n      toggleTask: toggleTask,\n      deleteTask: deleteTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"bBd6yqkqV9dlkj9ENgRyXKaiXpk=\");\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","TaskList","TaskForm","jsxDEV","_jsxDEV","App","_s","tasks","setTasks","API_BASE","process","env","NODE_ENV","fetch","then","res","ok","Error","json","data","catch","err","console","error","addTask","text","trim","method","headers","body","JSON","stringify","newTask","prev","toggleTask","id","map","t","done","deleteTask","filter","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/kavya/task-tracker/Client/src/App.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport TaskList from \"./components/TaskList\";\r\nimport TaskForm from \"./components/TaskForm\";\r\n\r\nexport default function App() {\r\n  const [tasks, setTasks] = useState([]);\r\n\r\n  // ‚úÖ Use environment-based API URL (helps both local + Docker)\r\n  const API_BASE =\r\n    process.env.NODE_ENV === \"production\"\r\n      ? \"\" // Docker/production uses same origin\r\n      : \"http://localhost:5000\"; // Local dev backend\r\n\r\n  // ‚úÖ Load tasks on mount\r\n  useEffect(() => {\r\n    fetch(`${API_BASE}/api/tasks`)\r\n      .then((res) => {\r\n        if (!res.ok) throw new Error(\"Failed to fetch tasks\");\r\n        return res.json();\r\n      })\r\n      .then((data) => setTasks(data))\r\n      .catch((err) => console.error(\"Error fetching tasks:\", err));\r\n  }, []);\r\n\r\n  // ‚úÖ Add new task\r\n  const addTask = async (text) => {\r\n    if (!text.trim()) return;\r\n    try {\r\n      const res = await fetch(`${API_BASE}/api/tasks`, {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({ text }),\r\n      });\r\n      if (!res.ok) throw new Error(\"Failed to add task\");\r\n      const newTask = await res.json();\r\n      setTasks((prev) => [...prev, newTask]);\r\n    } catch (err) {\r\n      console.error(\"Error adding task:\", err);\r\n    }\r\n  };\r\n\r\n  // ‚úÖ Toggle task completion\r\n  const toggleTask = async (id) => {\r\n    try {\r\n      const res = await fetch(`${API_BASE}/api/tasks/${id}`, {\r\n        method: \"PATCH\",\r\n      });\r\n      if (!res.ok) throw new Error(\"Failed to toggle task\");\r\n      setTasks((prev) =>\r\n        prev.map((t) => (t.id === id ? { ...t, done: !t.done } : t))\r\n      );\r\n    } catch (err) {\r\n      console.error(\"Error toggling task:\", err);\r\n    }\r\n  };\r\n\r\n  // ‚úÖ Delete task\r\n  const deleteTask = async (id) => {\r\n    try {\r\n      const res = await fetch(`${API_BASE}/api/tasks/${id}`, {\r\n        method: \"DELETE\",\r\n      });\r\n      if (!res.ok) throw new Error(\"Failed to delete task\");\r\n      setTasks((prev) => prev.filter((t) => t.id !== id));\r\n    } catch (err) {\r\n      console.error(\"Error deleting task:\", err);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <h1>üìùTask Tracker</h1>\r\n      <TaskForm addTask={addTask} />\r\n      <TaskList tasks={tasks} toggleTask={toggleTask} deleteTask={deleteTask} />\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}